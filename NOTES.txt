=== GMP 4.2 ===

wget http://ftp.sunet.se/pub/gnu/gmp/gmp-4.2.tar.bz2
tar xjvf gmp-4.2.tar.bz2
cd gmp-4.2

ppc64 build (done on G5):

# use default configure settings
./configure
make
make check

ppc build (also done on G5):

# find out appropriate OS string with config.guess and specify generic "powerpc" as CPU
./config.guess
./configure --build=powerpc-apple-darwin8.6.0
make
make check

i386 build (done on iMac Core Duo):

# default configure settings do not pass checks, force generic compilation
./config.guess
./configure --build=none-apple-darwin8.6.1
make
make check

Compiling a test program:

# after copying code from "INSTALL" file to example.c
gcc -g -I. example.c .libs/libgmp.a

# should print 31415926535897932384618573336104570964418
./a.out 98365871231256752134 319378318340103345227

Store source files in "$(SOURCE_ROOT)/gmp" so that Xcode can find the headers.

Store the built libraries (.libs/libgmp.a) in:

"$(SOURCE_ROOT)/lib/i386/libgmp.a"
"$(SOURCE_ROOT)/lib/ppc/libgmp.a"
"$(SOURCE_ROOT)/lib/ppc64/libgmp.a"

Make a fat binary version of the library using lipo (from the lib dir):

lipo -create i386/libgmp.a ppc/libgmp.a -output ./libgmp.a

Needed to use "ranlib" on the fat library in order to avoid i386 linker errors. Still didn't help with the ppc errors. Trying linking separately using these build settings:

OTHER_LDFLAGS_i386  = $(SRCROOT)/lib/i386/libgmp.a
OTHER_LDFLAGS_ppc  = $(SRCROOT)/lib/ppc/libgmp.a

Actually both of those libraries complained about the need to run ranlib as well, so ran it.

Tried building again (generic ppc):

# force static libraries
make clean
./configure --build=powerpc-apple-darwin8.6.0 --disable-shared
make
make check

No, that makes no real difference

These are equivalent:
$(SOURCE_ROOT)/lib/i386/libgmp.a -lSystemStubs
-Wl,$(SOURCE_ROOT)/lib/i386/libgmp.a -Wl,-lSystemStubs

Conclusion:

libSystemStubs is empty in the 10.3.9 SDK.
That is what is causing the link errors.
I built gmp with the wrong Darwin version? It's trying to use the 10.4 SDK.
Can I fix this by changing the Darwin version passed to configure?

http://developer.apple.com/documentation/DeveloperTools/Conceptual/cross_development/Using/chapter_3_section_2.html#//apple_ref/doc/uid/20002000-1114311-BABGCAAB

http://lists.apple.com/archives/unix-porting/2005/Oct/msg00003.html

http://developer.apple.com/technotes/tn2005/tn2137.html

export SDK=/Developer/SDKs/MacOSX10.3.9.sdk
export MACOSX_DEPLOYMENT_TARGET=10.3
export CFLAGS="-isysroot ${SDK}"
export CPPFLAGS="-isysroot ${SDK}"
export LDFLAGS="-isysroot ${SDK} -Wl,syslibroot,${SDK}"
./configure --build=powerpc-apple-darwin8.6.0
make
make check

Fails, try again:

export LDFLAGS="-isysroot ${SDK}"
./configure --build=powerpc-apple-darwin8.6.0

Also fails...

Try again:
export LDFLAGS="-syslibroot ${SDK}"
./configure --build=powerpc-apple-darwin8.6.0

Also fails, all with errors like this:
checking compiler gcc -isysroot /Developer/SDKs/MacOSX10.3.9.sdk -isysroot /Developer/SDKs/MacOSX10.3.9.sdk... no
checking whether cc is gcc... yes
checking compiler cc -isysroot /Developer/SDKs/MacOSX10.3.9.sdk -isysroot /Developer/SDKs/MacOSX10.3.9.sdk... no
configure: error: could not find a working compiler, see config.log for details

So why is the isysroot option getting passed twice? Try deleting CPPFLAGS:

export CPPFLAGS=""
./configure --build=powerpc-apple-darwin8.6.0

Different error this time:

checking compiler gcc -isysroot /Developer/SDKs/MacOSX10.3.9.sdk ... yes
checking for gcc... gcc
checking for C compiler default output file name... configure: error: C compiler cannot create executables
See `config.log' for more details.

config.log shows this.

configure:6803: checking for C compiler default output file name
configure:6806: gcc -isysroot /Developer/SDKs/MacOSX10.3.9.sdk  -syslibroot /Developer/SDKs/MacOSX10.3.9.sdk conftest.c  >&5
powerpc-apple-darwin8-gcc-4.0.1: unrecognized option '-syslibroot'
/usr/bin/ld: can't map file: /Developer/SDKs/MacOSX10.3.9.sdk ((os/kern) invalid argument)

So try this:

export LDFLAGS="-Wl,syslibroot,/Developer/SDKs/MacOSX10.3.9.sdk"
./configure --build=powerpc-apple-darwin8.6.0

Same error... config.log:

configure:6803: checking for C compiler default output file name
configure:6806: gcc -isysroot /Developer/SDKs/MacOSX10.3.9.sdk  -Wl,syslibroot,/Developer/SDKs/MacOSX10.3.9.sdk conftest.c  >&5
/usr/bin/ld: can't open: syslibroot (No such file or directory, errno = 2)
/usr/bin/ld: can't map file: /Developer/SDKs/MacOSX10.3.9.sdk ((os/kern) invalid argument)
collect2: ld returned 1 exit status

Try this:

export LDFLAGS="-Wl,-syslibroot,/Developer/SDKs/MacOSX10.3.9.sdk"
./configure --build=powerpc-apple-darwin8.6.0

Same error... config.log:

configure:6803: checking for C compiler default output file name
configure:6806: gcc -isysroot /Developer/SDKs/MacOSX10.3.9.sdk  -Wl,-syslibroot,/Developer/SDKs/MacOSX10.3.9.sdk conftest.c  >&5
/usr/bin/ld: -syslibroot: multiply specified
collect2: ld returned 1 exit status

So try this:

export LDFLAGS=""
./configure --build=powerpc-apple-darwin8.6.0

Yay, seems to work... and when I run nm on the new lib I see no refs to the dreaded stub symbols... good...

***************************************************************************
4.2.1 notes

# in theory it's this simple:
./configure
make
make check

# in reality...
wget http://ftp.sunet.se/pub/gnu/gmp/gmp-4.2.1.tar.bz2
tar xjvf gmp-4.2.1.tar.bz2
cd gmp-4.2.1
./config.guess # => pentium3-apple-darwin8.9.1
./configure --disable-shared
make
make check # => fails with undefined symbols
make clean
./configure --disable-shared --build=none-apple-darwin8.9.1 # => try with generic compilation (no assembly)
make
make check # => works

# move built lib out of way and move on to PPC
mkdir ../i386
cp .libs/libgmp.a ../i386
make clean
./configure --disable-shared --build=none-apple-darwin8.9.1 --host=powerpc-apple-darwin8.9 # => bails, can't find compiler

# inspection shows the compiler is at: /usr/bin/powerpc-apple-darwin8-gcc-4.0.1
make clean
./configure --disable-shared --build=none-apple-darwin8.9.1 --host=powerpc-apple-darwin8.9 CC=/usr/bin/powerpc-apple-darwin8-gcc-4.0.1
make check # => works

# make a Universal binary
mkdir ../ppc
cp .libs/libgmp.a ../ppc
make clean
cd ..
mkdir fat
lipo i386/libgmp.a ppc/libgmp.a -output fat/libgmp.a -create
lipo -info fat/libgmp.a

# copy into Hextrapolate working copy and check in to repository
rm -r gmp                       # remove old headers directory
ln -s gmp-4.2.1 gmp             # create symlink pointing to new headers directory
mv gmp-4.2.1.tar.bz2 ../gmp/    # move source archive out of the way
mv fat/libgmp.a src/lib/
mv ppc/libgmp.a src/lib/ppc/
mv i386/libgmp.a src/lib/i386/
rm -r fat ppc i386

# will check headers into subversion as well, otherwise we'll have trouble with nightlies
cd src
svk rm gmp
svk ci -m "Remove symlink"
cp -R ../gmp-4.2.1 gmp
svk add gmp
svk ci -m "Add GMP files to repo"
rm -r ../gmp-4.2.1
rm ../gmp


= Gimp 4.2.2 =

wget "ftp://ftp.gnu.org/gnu/gmp/gmp-4.2.2.tar.bz2"
see: http://gmplib.org/macos.html

 3066  tar xjvf gmp-4.2.2.tar.bz2
 3067  cd gmp-4.2.2/
 3068  ./config.guess
 3069  ./configure --disable-shared
 3070  make
 3071  make check
 3072  make clean
 3073  ./configure --disable-shared --build=none-apple-darwin9.3.0
 3074  make
 3075  make check
 3076  mkdir ../i386
 3077  cp .libs/libgmp.a ../i386/
 3078  make clean
 3079  ./configure --disable-shared --build=none-apple-darwin9.3.0 --host=powerpc-apple-darwin9.3
 3080  ./configure --disable-shared --build=none-apple-darwin9.3.0 --host=powerpc-apple-darwin9.3
CC=/usr/bin/powerpc-apple-darwin9-gcc-4.0.1
 3081  make
 3082  make check
 3083  mkdir ../ppc
 3084  cp .libs/libgmp.a ../ppc/
 3085  make clean
 3086  cd ..
 3087  mkdir fat
 3088  lipo i386/libgmp.a ppc/libgmp.a -output fat/libgmp.a -create
 3089  lipo -info fat/libgmp.a
