NO MORE NEW FEATURES FOR 2.0! MUST SHIP... LET NEW FEATURES ROLL INTO 2.1

Email out new, generated licenses on Tuesday, then release.

TODO: add display-only fields showing values as float, double, int (different sizes)?
TODO: services menu items for converting in other apps
TODO: hot key to bring to front
TODO: cool new theme like the "Ajustes" window in iPhoto and Pages etc
TODO: Instead of adding new text encodings to the pop-up one by one, add a UI that lets the user choose which encoding should be included (and offers a whole heap of them).
TOOD: help
    - plan is to hand-code very basic help
    - this will be a nice pre-run for setting up Walrus


TODO: write command-line release script which does:
1. xcodebuild (clean, then build)
2. halts on errors, even unit testing errors
3. copies all dsym files into a labelled folder

// allow user to configure:
// - if color coding takes place
// - how many chars per division
// - what the colors are
// TODO: credit for GMP in the "About" box, or failing that in the docs
// TODO: dashboard widget
// TODO: check that price displays as 9€ and not 10€

// TODO: fix linker warnings:
// /usr/bin/ld: warning duplicate archive member name: /Users/wincent/trabajo/unversioned/Hextrapolate/src/lib/libgmp.a(get_str.o) loaded (could be ambiguous when -sectorder options are used)
// /usr/bin/ld: warning duplicate archive member name: /Users/wincent/trabajo/unversioned/Hextrapolate/src/lib/libgmp.a(set_str.o) loaded (could be ambiguous when -sectorder options are used)

// TODO: immediately after registration + activation: pref panel status reads "not registered"

TODO: figure out why my license is still valid even though it's only supposed to work up-to-but-not-including 2.0

- help is now online... no need to link to WebKit
- switch to Cocoa Bindings for prefs

There is now some competition: "Value Converter"

http://www.zathras.de/programming/macapplications.htm

	- signed/unsigned
	- bitfield (32 checkboxes, oy!)
	- hexadecimal
	- decimal
	- octal
	- binary
	- characters (FourCharCode & co.)

Thanks!  Might I suggest adding single-precision Float32, and display exponent, mantissa, plus Nan, QNan, +/- Inf, and sign?  

add "Buy now..." link to app menu, ghost it when registered

[bug?] leaks
even tabbing from one field to another adds another WOMPZWrapper "leak"
tabbing to the ASCII field adds two of them
tabbing out fo the ASCII field adds four!
in reverse-order, tabbing into the field add three, and tabbing out adds one

note this is not consistent: on re-testing, tabbing from hex to dec adds two,
from dec to ascii adds one... out of ascii adds one

with NSLog() in the init and dealloc of WOMPZWrapper I see perfect balance between init and release
is leaks reporting spurious leaks?


testing...
*** at launch, mem:
real 5.22 priv 1.23
virtual 110.86 priv virtual 26.55
shared 25.00
*** after heavy use:
real 8.36 priv 3.88
virt 113.57 priv virt 28.43
shared 26.38
*** after a few minutes of light use ("recovery" time):

and it won't even let me type 01-0f: answer, these are control characters!
(leading zero problem: have to allow leading zeros in hex field: or switch to 0x notation)

so I suspect the solution to this bug and the next are linked...
I need an internal representation of the value
intependent (to a degree) of the string.
eg "this is the value,
and this is the string it represents,
and these chars are grey ?s because they correspond to values greater than 7f
and these chars are grey ^s because they are control characers (less than 20)"

will have to ponder this one...

[bug] if there are overflowed chars in the ASCII field, they get removed just by tabbing through it
-- only one call gets made on entry into the field this is enough to ruin the string, of course...
2004-01-01 20:25:55.246 WinHex[10932] [Class: WOASCIIFormatter, Line: 23] Entered (stringForObjectValue:)
-- and four on exit!
2004-01-01 20:25:55.254 WinHex[10932] [Class: WOASCIIFormatter, Line: 164] Entered (attributedStringForObjectValue:withDefaultAttributes:)
2004-01-01 20:25:55.255 WinHex[10932] [Class: WOASCIIFormatter, Line: 164] Entered (attributedStringForObjectValue:withDefaultAttributes:)
2004-01-01 20:25:55.255 WinHex[10932] [Class: WOASCIIFormatter, Line: 164] Entered (attributedStringForObjectValue:withDefaultAttributes:)
2004-01-01 20:25:55.255 WinHex[10932] [Class: WOASCIIFormatter, Line: 164] Entered (attributedStringForObjectValue:withDefaultAttributes:)

ok, fixed this bug, but the behaviour isn't ideal.
now, on tabbing into field, we get a non-attributed string (the grey highlighting on the question marks goes away)
the grey highlighting doesn't come back until text is modified in another field
if the ASCII text is modified, then all the question marks are interpreted as literal ASCII question marks

solution... intercept editing requests and change only the edited parts (ie. if a high-order byte is changed,
let that byte be edited, but not the others...)
cache internally the actually object value and the "clamped" object value?
could very easily get very messy.....

... add support for more encodings than ASCII (via a popup)

... hot key to bring to front

... add signed decimal field (this one has to be of fixed bit width... perhaps
should do it as a popup: "16 bit signed decimal", "32 bit signed decimal", "64 bit signed decimal" etc)

Put exception handlers in for fucked up shit?

use caching within formatters to reduce computation (you've seen how often they
get called)

allow text fields to be blank when value = 0

allow leading zeros to persist if typed for all bases except base-10 (prevent them from even being typed?)

preferences:

Because this is a small app, should be very manageable to run Sampler, Malloc
Debug and leaks on it to get it really tight.
. so far so good: leaks reports 0
. up to 3 now...
. shit... WOMPZWrapper is leaking like a seive...
-> AUDIT CODE.... search for malloc, alloc, copy etc 

find out what "Unit testing" is and how to do it...

Roll finished code into WOBase and then incorprate WOBase back into this program.
This will allow me to add serial numbers etc. Small app, so low price. eg. $5.

Website, domain name, public release...