#!/usr/bin/env ruby
# encoding: utf-8
# Generated by Walrus <http://walrus.wincent.com/>

begin
  require 'rubygems'
rescue LoadError
  # installing Walrus via RubyGems is recommended
  # otherwise Walrus must be installed in the RUBYLIB load path
end

require 'walrus/document'
require File.expand_path('../../../buildtools/help/basic', File.dirname(__FILE__))

module Walrus
  class Grammar
    class WhatsNew < Basic
      def template_body
        super # (invoked automatically due to Extends directive)
        # Comment: Created by Wincent Colaiuta on 21 April 2007.
        # Comment: Copyright 2007 Wincent Colaiuta
        # Comment: $Id: /mirrors/Hextrapolate/trunk/en.lproj/help/example_basic.tmpl.txt 6761 2007-04-14T11:59:53.204092Z wincent  $
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText
        # Comment:#############################################################################
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText (continued)
      end

      def setup
        accumulate('  ') # RawText
        # Include (start): ../settings.txt:
                # Comment: settings.tmpl
                # Comment: A template for application-wide default settings
                # Comment: buildtools help templates
                # Comment:
                # Comment: Copyright 2006-2010 Wincent Colaiuta. All rights reserved.
                # Comment:
                # Comment: Redistribution and use in source and binary forms, with or without
                # Comment: modification, are permitted provided that the following conditions are met:
                # Comment:
                # Comment: 1. Redistributions of source code must retain the above copyright notice,
                # Comment:    this list of conditions and the following disclaimer.
                # Comment: 2. Redistributions in binary form must reproduce the above copyright notice,
                # Comment:    this list of conditions and the following disclaimer in the documentation
                # Comment:    and/or other materials provided with the distribution.
                # Comment:
                # Comment: THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
                # Comment: AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
                # Comment: IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
                # Comment: ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
                # Comment: LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
                # Comment: CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
                # Comment: SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
                # Comment: INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
                # Comment: CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
                # Comment: ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
                # Comment: POSSIBILITY OF SUCH DAMAGE.
                accumulate('' + "\n") # RawText
                # Comment:
                # Comment: appliction-wide default settings go in here
                # Comment:
                accumulate('' + "\n") # RawText
                set_value("book_id", instance_eval { 'Hextrapolate Help' }) # Set directive
                set_value("book_icon", instance_eval { 'Hextrapolate Help/gfx/icon16.png' }) # Set directive
                set_value("author", instance_eval { 'Wincent Colaiuta' }) # Set directive
                set_value("author_email", instance_eval { 'win@wincent.com' }) # Set directive
                set_value("copyright", instance_eval { 'Copyright 2007-2010 Wincent Coliauta' }) # Set directive
                accumulate('' + "\n") # RawText
                # Comment:
                # Comment: the page_title should be overridden on a per-page basis
                # Comment:
                accumulate('' + "\n") # RawText
                set_value("page_title", instance_eval { 'Help' }) # Set directive
        accumulate('  ') # RawText
        set_value("page_title", instance_eval { "What's new in Hextrapolate?" }) # Set directive
        accumulate('  ') # RawText
        set_value("tag", instance_eval { 'whats_new' }) # Set directive
        accumulate('  ') # RawText
        # Comment:#set $abstract    = "if different from page title"
        accumulate('' + "\n") # RawText
        accumulate('  ') # RawText (continued)
        # Comment:$see_also($link_to('base2', 'other text'))
        accumulate('' + "\n") # RawText
        accumulate('  ') # RawText (continued)
        # Comment:$see_also($link_to_category('base2', 'other text'))
        accumulate('' + "\n") # RawText
      end
      
      def content
        accumulate('' + "\n") # RawText
        accumulate('Hextrapolate version 2.0 is a complete ground-up rewrite of the previous version (formerly known as WinHex) and delivers many new features, bug fixes and enhancements. The new conversion engine is faster, more resource efficient and more powerful.' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('<div class="feature">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('h2. Selectable text encodings<br>' + "\n") # RawText (continued)
        accumulate('<img src="../gfx/encoding-popup.png" width="174" height="132" alt="Encoding pop-up">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('You can now convert numbers to and from more text encodings: ASCII, UTF-8, and two variants of UTF-16 (little and big endian). Not only that, but the conversion engine has been rewritten to better handle cases where the number being converted is not valid for the selected encoding.' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('* ') # RawText (continued)
        lookup_and_accumulate_placeholder(:link_to, 'text_encodings')
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText (continued)
        accumulate('</div>' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('<div class="feature">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('h2. More choices<br>' + "\n") # RawText (continued)
        accumulate('<img src="../gfx/more-choices.png" width="129" height="110" alt="More choices">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('More fields have been added to the interface to provide more flexible conversions. This means that you can now convert to and from any of the supported text encodings and bases without having to repeatedly switch your selected encoding or base. Exotic conversion which were previously a two step process (for example Base 12 to Base 19) can now be done in a single step.' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('* ') # RawText (continued)
        lookup_and_accumulate_placeholder(:link_to, 'bases')
        accumulate('' + "\n") # RawText
        accumulate('* ') # RawText (continued)
        lookup_and_accumulate_placeholder(:link_to, 'text_encodings')
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText (continued)
        accumulate('</div>' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('<div class="feature">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('h2. Better feedback<br>' + "\n") # RawText (continued)
        accumulate('<img src="../gfx/better-feedback.png" width="164" height="57" alt="Better feedback">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('The Hextrapolate main window now shows more information in the title bar, allowing you to see at a glance the size of the number currently being converted (in bits and bytes). Numbers can be arbitrarily large in size, extending to thousands of bits and beyond.' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('</div>' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('<div class="feature">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('h2. Comprehensive tool-tips<br>' + "\n") # RawText (continued)
        accumulate('<img src="../gfx/tool-tips.png" width="171" height="105" alt="Tool-tips">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('More tool tips have been added to the interface to provide better feedback in realtime if you try to type a character which is not allowed in a particular base or text encoding.' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('* ') # RawText (continued)
        lookup_and_accumulate_placeholder(:link_to, 'let_me_type', 'Getting feedback on errors')
        accumulate('' + "\n") # RawText
        accumulate('' + "\n") # RawText (continued)
        accumulate('</div>' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('<div class="feature">' + "\n") # RawText (continued)
        accumulate('  ' + "\n") # RawText (continued)
        accumulate('h2. Integrated help<br>' + "\n") # RawText (continued)
        accumulate('<img src="../gfx/integrated-help.png" width="171" height="105" alt="Integrated help">' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('Extensive help documentation prepared in the familiar format used by Apple applications is now embedded within the Hextrapolate application itself. An online mirror of the documentation can be found <a href="http://wincent.com/a/products/hextrapolate/help/">here</a>.' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
        accumulate('</div>' + "\n") # RawText (continued)
        accumulate('' + "\n") # RawText (continued)
      end
      
      if __FILE__ == $0   # if run from the command line
        new.run           # same as "walrus run __FILE__"
      else                # if loaded and evaled
        new.fill          # return filled content
      end
    end # WhatsNew
  end # Grammar
end # Walrus
